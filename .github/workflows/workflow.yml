---
name: CI

on:
  push:
    branches: ["develop","master"]
  pull_request:
    branches: ["develop","master"]
  workflow_dispatch:

jobs:
  python_typecheck:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          python -m pip install -r requirements.txt
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade flake8 mypy types-requests
          python -m pip install -e .

      - name: "Run mypy and flake8 for ${{ matrix.python-version }}"
        run: |
          flake8 .
          cd src
          mypy --ignore-missing-imports .
  python_code_formatting:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9","3.10","3.11"]
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade black isort

      - name: "Run black and isort for ${{ matrix.python-version }}"
        run: |
          python -m black --check .
          isort -c .
  python_tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9","3.10","3.11"]
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m pip install --upgrade pytest coverage
          python -m pip install -e .

      - name: "Run tests ${{ matrix.python-version }}"
        env: # Or as an environment variable
          SDK_TEST_CLIENT_ID: ${{ secrets.SDK_TEST_CLIENT_ID }}
          SDK_TEST_CLIENT_SECRET: ${{ secrets.SDK_TEST_CLIENT_SECRET }}
        run: |
          cd tests
          coverage run --source=. -m pytest -vv --capture=no
          coverage report
